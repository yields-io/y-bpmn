#camunda.bpm:
#  admin-user:
#    id: demo
#    password: demo
#    firstName: Demo
#  filter:
#    create: All tasks

# for keycloak uncomment this and comment out admin-user above
# also uncomment keycloak dependency in the pom.xml

camunda.bpm:
#  webapp:
#    index-redirect-enabled: true
  history-level: audit
  authorization:
    enabled: true
  filter:
    create: All tasks

plugin.identity.keycloak:
  keycloakIssuerUrl: https://bnp.qa.yields.io/y-keycloak/realms/yields
  keycloakAdminUrl: https://bnp.qa.yields.io/y-keycloak/admin/realms/yields
  clientId: camunda-identity-service
  clientSecret: 15fdf9ae-ca24-4e9c-af64-e45d10471acc
  useEmailAsCamundaUserId: false
  useUsernameAsCamundaUserId: true
  useGroupPathAsCamundaGroupId : true
  administratorGroupName: camunda-admin
  disableSSLCertificateValidation: true




#keycloak:
#  url.auth: ${KEYCLOAK_URL_AUTH:https://bnp.qa.yields.io/y-keycloak}
#  url.token: ${KEYCLOAK_URL_TOKEN:https://bnp.qa.yields.io/y-keycloak}
#  url.plugin: ${KEYCLOAK_URL_PLUGIN:https://bnp.qa.yields.io/y-keycloak}
#  client.id: ${KEYCLOAK_CLIENT_ID:camunda-identity-service}
#  client.secret: ${KEYCLOAK_CLIENT_SECRET:15fdf9ae-ca24-4e9c-af64-e45d10471acc}
#
## Spring Boot SSO OAuth2 Security
#security:
#  oauth2:
#    client:
#      client-id: ${keycloak.client.id}
#      client-secret: ${keycloak.client.secret}
#      accessTokenUri: ${keycloak.url.token}/auth/realms/yields/protocol/openid-connect/token
#      userAuthorizationUri: ${keycloak.url.auth}/auth/realms/yields/protocol/openid-connect/auth
#      scope: openid profile email
#    resource:
#      userInfoUri: ${keycloak.url.auth}/auth/realms/yields/protocol/openid-connect/userinfo
#
#
## Camunda Rest API
#rest.security:
#  enabled: true
#  jwk-set-url: ${keycloak.url.token}/auth/realms/yields/protocol/openid-connect/certs
#  required-audience: camunda-rest-api


logging:
  level:
    ROOT: INFO
    io.yields: INFO
    org.springframework.security: DEBUG
