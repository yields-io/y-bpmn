#camunda.bpm:
#  admin-user:
#    id: demo
#    password: demo
#    firstName: Demo
#  filter:
#    create: All tasks

# for keycloak uncomment this and comment out admin-user above
# also uncomment keycloak dependency in the pom.xml

camunda.bpm:
#  webapp:
#    index-redirect-enabled: true
  history-level: audit
  authorization:
    enabled: true
  filter:
    create: All tasks

plugin.identity.keycloak:
  keycloakIssuerUrl: https://keycloak.dev.bolt.acaisoft.io/auth/realms/yields
  keycloakAdminUrl: https://keycloak.dev.bolt.acaisoft.io/auth/admin/realms/yields
  clientId: camunda-identity-service
  clientSecret: c08f343f-3870-4948-9a36-434d8c1ffb75
  useEmailAsCamundaUserId: false
  useUsernameAsCamundaUserId: true
  useGroupPathAsCamundaGroupId : true
  administratorGroupName: Central


keycloak:
  url.auth: ${KEYCLOAK_URL_AUTH:https://keycloak.dev.bolt.acaisoft.io}
  url.token: ${KEYCLOAK_URL_TOKEN:https://keycloak.dev.bolt.acaisoft.io}
  url.plugin: ${KEYCLOAK_URL_PLUGIN:https://keycloak.dev.bolt.acaisoft.io}
  client.id: ${KEYCLOAK_CLIENT_ID:camunda-identity-service}
  client.secret: ${KEYCLOAK_CLIENT_SECRET:c08f343f-3870-4948-9a36-434d8c1ffb75}

# Spring Boot SSO OAuth2 Security
security:
  oauth2:
    client:
      client-id: ${keycloak.client.id}
      client-secret: ${keycloak.client.secret}
      accessTokenUri: ${keycloak.url.token}/auth/realms/yields/protocol/openid-connect/token
      userAuthorizationUri: ${keycloak.url.auth}/auth/realms/yields/protocol/openid-connect/auth
      scope: openid profile email
    resource:
      userInfoUri: ${keycloak.url.auth}/auth/realms/yields/protocol/openid-connect/userinfo


# Camunda Rest API
rest.security:
  enabled: true
  jwk-set-url: ${keycloak.url.token}/auth/realms/yields/protocol/openid-connect/certs
  required-audience: camunda-rest-api


logging:
  level:
    ROOT: INFO
    io.yields: INFO
    org.springframework.security: DEBUG
